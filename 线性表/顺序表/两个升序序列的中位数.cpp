	/*
	分别求两个生序序列A,B的中位数a，b，过程如下：
	1、若a=b，则a或者b就是所求的中位数，算法结束。
	2、若a>b，则舍弃舍弃A中比a大的部分，舍弃B中比b小的部分，要求舍弃的长度一致。
	3、若a<b，则舍弃舍弃A中比a小的部分，舍弃B中比b大的部分，要求舍弃的长度一致。
	重复上述过程，知道两个序列均只含一个函数为止，较小者就是所求中位数。
	 */
	int FindMid(int A[],int B[],int n){
		int s1=0,d1=n-1,m1,s2=0,d2=n-1,m2;
		while(d1!=s1||d2!=s2){
			m1=(d1-s1)/2,m2=(d2-s2)/2;
			if(A[m1]=B[m2]) return A[m1];
			else if(A[m1]>B[m2]){
				if((d1-s1)%2==0){	//若元素个数为奇数
					d1=m1;
					s2=m2;
				}else{
					d1=m1;
					s2=m2+1;
				}
			}else{
				if((d1-s1)%2==0){
					d2=m2;
					s1=m1;
				}else{
					d2=m2;
					s1=m1+1;
				}
			}
		}
		return A[s1]<B[s2]?A[s1]:B[s2];
	}
	/*
	算法的时间复杂度为O(log2n)，空间复杂度为O(1)。
	 */
